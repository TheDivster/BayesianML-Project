library(ggplot2)
library(arm)
library(rstan)
options(mc.cores = parallel::detectCores())
library(TeachingDemos)
library(reshape2)
library(tidyverse)
library(plyr)
library(lme4)
library(rstanarm)
setwd("~/Dropbox/*UofU/Teaching/2024_Spring/ECON7800_Econometrics 1/Lectures/Lecture9GLM")
library(readr)
RR_processed <- read_csv("RR-processed.csv")
View(RR_processed)
data<-read.csv("RR-processed.csv")
head(data)
unique(data$Country)
D<-data %>% select(Country,dRGDP,debtgdp,Year)
colnames(D)<-c("country","gdp","debt","year")
summary(D)
attach(D)
# create list of countries
cntry<-as.character(unique(D$country))
# check sample size by country
cbind("country"=as.character(unique(D$country)),"n.obs"=as.vector(table(D$country)))
plotmeans(gdp ~ country, main="Heterogeineity across country", data=D)
library(ggplot2)
library(arm)
library(rstan)
options(mc.cores = parallel::detectCores())
library(TeachingDemos)
library(reshape2)
library(tidyverse)
library(plyr)
library(lme4)
library(rstanarm)
plotmeans(gdp ~ country, main="Heterogeineity across country", data=D)
# Running the regression on each country
par(mfrow=c(5,4),mar=c(2,2,3,1))
for(j in cntry) {
plot(D$debt[D$country==j],D$gdp[D$country==j],
ylab="x",xlab="k",main=j,pch=20)
abline(lm(gdp~debt,data=D[D$country==j,]) ,col="blue") # individual reg.
}
par(mfrow=c(1,1),mar=c(4,4,3,4))
# Complete Pooling
plot(gdp~debt,data=D,
ylab="x",xlab="k",main=j,pch=20)
pool.fit<-lm(gdp~debt,data=D)
abline(pool.fit ,col="blue",lwd=3) # pooled reg.
# Using rstanarm package
stan.fit.fn<-function(x){
stan.lm.no.pooling <- stan_lm(gdp~debt,data=D[D$country==x,],prior=NULL)
out<-data.frame(stan.lm.no.pooling)[c(1,2,3)]
colnames(out)<-c("alpha","beta","sigma")
out1<-melt(out)
out2<-cbind(out1,"country"=x)
return(out2)
}
no.pooling.fit<-lapply(cntry, stan.fit.fn)
no.pooling.samps=do.call("rbind",no.pooling.fit)
ggplot(no.pooling.samps[no.pooling.samps$variable=="alpha",], aes(country,value)) + theme_bw() +
geom_boxplot(alpha=.2) + xlab("") + ylab("")  + ggtitle("alpha") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5, size=10))+
geom_hline(aes(yintercept=coef(pool.fit)[1]),col="red")
ggplot(no.pooling.samps[no.pooling.samps$variable=="beta",], aes(country,value)) + theme_bw() +
geom_boxplot(alpha=.2) + xlab("") + ylab("")  + ggtitle("beta") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5, size=10))+
geom_hline(aes(yintercept=coef(pool.fit)[2]),col="red")
ggplot(no.pooling.samps[no.pooling.samps$variable=="sigma",], aes(country,value)) + theme_bw() +
geom_boxplot(alpha=.2) + xlab("") + ylab("")  + ggtitle("sigma") +
theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5, size=10))+
geom_hline(aes(yintercept=sd(pool.fit$residuals)),col="red")
xmean<-lmer(gdp ~ (1|country) ,data=D)
coef(xmean) # mean growth
fixef(xmean) # pooled mean
ranef(xmean) # deviation from pooled mean
cd.pp<-lmer(gdp~debt + (1|country ) ,data=D)
display(cd.pp)
coef(cd.pp) # varying intercepts
fixef(cd.pp) # average regression
ranef(cd.pp) # deviation from average regression
summary(cd.pp)
alpha.pp<-coef(cd.pp)$country[,1] # extract within group intercepts
beta.pp<-coef(cd.pp)$country[1,2] #extract between group constant slope
names(alpha.pp)<-cntry # add country identifies to coefs
# Plot regressions for individual regressions, no pooling, complete pooling
GR<-D[D$country=="Greece",]
par(mfrow=c(1,1))
plot(GR$debt,GR$gdp,pch=20)
GRfit<-lm(gdp~debt,data=GR)
abline(GRfit,col="blue") # no pooling fit
abline(alpha.pp["Greece"],beta.pp,col="red") # partial pooling fit
cd.pool<-lm(gdp~debt,data=D) # pooled fit
abline(cd.pool,col=1)
vi.stan.lmer.2 <- stan_lmer(gdp~debt + (1|country)+ (1|year),data=D)
mcmc_dens(vi.stan.lmer.2, pars = c("debt"))
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
View(BLS_Data)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
View(BLS_Data)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
head(BLS_data)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
head(BLS_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
head(CDC_Data)
pool <- lmer(CDC_Data$RATE ~ BLS_Data$Ratio)
View(BLS_Data)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
BLS_Data <- BLS_Data[-c(1, 2, 53)]
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
BLS_Data <- BLS_Data[-c(1, 2, 53),]
head(BLS_Data)
pool <- lmer(CDC_Data$RATE ~ BLS_Data$Ratio)
View(CDC_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
CDC_2020_Data <- CDC_Data[-c(51...)]
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
CDC_2020_Data <- CDC_Data[-c(51:),]
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
CDC_2020_Data <- CDC_Data[1:50]
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_Data)
View(CDC_2020_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_2020_Data)
pool <- lmer(CDC_Data$RATE ~ BLS_Data$Ratio)
pool <- lmer(CDC_2020_Data$RATE ~ BLS_Data$Ratio )
pool <- lmer(CDC_2020_Data$RATE ~ (1|CDC_2020_Data$STATE) )
View(RR_processed)
pool <- lmer(CDC_Data$RATE ~ (1|CD_Data$STATE))
pool <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
pool <- lmer(CDC_Data$RATE ~ CDC_Data$STATE)
pool <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
# CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_2020_Data)
pool <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
View(CDC_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
# CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_2020_Data)
View(CDC_Data)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
BLS_Data <- BLS_Data[-c(1, 2, 53),]
head(BLS_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
# CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_2020_Data)
pool <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
BLS_Data <- BLS_Data[-c(1, 2, 53),]
head(BLS_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
# CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_2020_Data)
pool <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
library(ggplot2)
library(arm)
library(rstan)
options(mc.cores = parallel::detectCores())
library(TeachingDemos)
library(reshape2)
library(tidyverse)
library(plyr)
library(lme4)
library(rstanarm)
pool <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
summary(pool)
display(pool)
print(coef(pool)) # mean growth
print(fixef(pool)) # pooled mean
print(ranef(pool)) # deviation from pooled mean
print(coef(pool)) # mean growth
print(fixef(pool)) # pooled mean
print(ranef(pool)) # deviation from pooled mean
fita = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
library(Rcpp)
fita = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
install.packages("bayeslm")
library(bayeslm)
fita = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
library(bayeslm)
fita = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
library(bayeslm)
pool = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
summary(pool)
library(bayeslm)
pool = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'normal', N = 10000, burnin = 2000)
plot.MCMC(pool)
plot.fit(pool$beta)
plot(pool$beta)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(arm)
library(rstan)
options(mc.cores = parallel::detectCores())
library(TeachingDemos)
library(reshape2)
library(tidyverse)
library(plyr)
library(lme4)
library(rstanarm)
library(readr)
BLS_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/BLS Data.csv")
BLS_Data <- BLS_Data[-c(1, 2, 53),]
head(BLS_Data)
CDC_Data <- read_csv("~/Developer/VSCode/final-project-3musketeers/data/CDC Data.csv")
# CDC_2020_Data <- CDC_Data[1:50,]
head(CDC_2020_Data)
vary <- lmer(CDC_Data$RATE ~ (1|CDC_Data$STATE))
summary(vary)
print(coef(vary)) # mean growth
print(fixef(vary)) # pooled mean
print(ranef(vary)) # deviation from pooled mean
library(bayeslm)
pool = bayeslm(CDC_2020_Data$RATE ~ BLS_Data$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
summary(pool)
plot(pool$beta)
plot(pressure)
plot(BLS_Data$Ratio, CDC_2020_Data$RATE)
plot(BLS_Data$Ratio, CDC_2020_Data$RATE)
plot(pool$fitted.value)
plot(BLS_Data$Ratio, CDC_2020_Data$RATEcol="teal")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="teal")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="teal")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool$fitted.value, col="blue")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool, col="blue")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool, col="blue")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool$fitted.value, col="blue")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool$beta, col="blue")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool$icept, col="blue")
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool, col="blue")
pool_freq <- lm(CDC_2020_Data$RATE ~ BLS_Data$Ratio)
summary(pool_freq)
plot(BLS_Data$Ratio, CDC_2020_Data$RATE, col="black")
abline(pool_freq, col="blue")
fixed <- lmer(CDC_Data$RATE ~ BLS_Data$Ratio + (1|CDC_Data$STATE))
fixed <- lmer(CDC_Data_2020$RATE ~ BLS_Data$Ratio + (1|CDC_Data$STATE))
fixed <- lmer(CDC_2020_Data$RATE ~ BLS_Data$Ratio + (1|CDC_Data$STATE))
fixed <- lmer(CDC_2020_Data$RATE ~ BLS_Data$Ratio + (1|CDC_2020_Data$STATE))
utah_final <- read_csv("utah-final.csv")
head(utah_final)
pool_utah <- bayeslm(utah_final$Deaths ~ utah_final$Ratio, prior = 'horseshoe', N = 10000, burnin = 2000)
summary(pool_utah)
plot(pool_utah$beta)
plot(utah_final$Deaths, utah_final$Ratio)
plotutah_final$Ratio, (utah_final$Deaths)
plot(utah_final$Ratio, utah_final$Deaths)
pool_utah_freq <- lm(utah_final$Deaths ~ utah_final$Ratio)
summary(pool_utah_freq)
plot(utah_final$Ratio, utah_final$Deaths)
abline(pool_utah_freq)
plot(utah_final$Ratio, utah_final$Deaths, col = "black")
abline(pool_utah_freq, col = "blue")
pool_utah <- bayeslm(utah_final$Deaths ~ utah_final$Ratio, prior = 'laplace', N = 10000, burnin = 2000)
summary(pool_utah)
plot(pool_utah$beta)
